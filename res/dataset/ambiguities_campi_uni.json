[
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: add middlebox('copyright monitoring') for group('students')",
            "text": "If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') unset bandwidth()",
            "text": "Currently, the University of Illinois does not have any rate limits"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor')",
            "text": "University Housing monitors only the amount of traffic of each user"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike')",
            "text": "CounterStrike server is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",
            "text": "AIM chat and file transfering is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet')",
            "text": "Battlenet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "hierarchy",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "hierarchy",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "hierarchy",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "hierarchy",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing')",
            "text": "H323 video conferencing is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest')",
            "text": "Everquest is blocked by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "path",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",
            "text": "HTTP and HTTPS are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",
            "text": "IMAP and secure IMAP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')",
            "text": "MSN audio and video communications are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone')",
            "text": "Net2Phone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone')",
            "text": "PC-Telephone is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",
            "text": "POP3 and secure POP are allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP')",
            "text": "SMTP is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2')",
            "text": "Sony Playstation 2 is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH')",
            "text": "SSH is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet')",
            "text": "Telnet is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",
            "text": "FTP and SFTP servers are allowed by the University firewall"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200')",
            "text": "Sorenson Videophone 200 is allowed by the University firewall"
        },
        "type": "negation",
        "university": "University of Illinois - Urbana Champaign"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('host') set quota('download', '18', 'gb'), bandwidth('max', '2', 'mbps')",
            "text": "When a total of 18 gigabytes of data is reached, the individual's bandwidth rate limit is set to 2 Mbps"
        },
        "sentence": {
            "nile": "define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",
            "text": "Students data limit is 100 GB per week"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",
            "text": "The individual will have a 4 Mbps bandwidth rate limit"
        },
        "sentence": {
            "nile": "define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",
            "text": "Students data limit is 100 GB per week"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: from endpoint('guests') to endpoint('servers') for group('host') block traffic('any')",
            "text": "RHIT-OPEN will work in labs, classrooms and residence halls but does not allow the user to access the internal Rose-Hulman network"
        },
        "sentence": {
            "nile": "define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",
            "text": "Students data limit is 100 GB per week"
        },
        "type": "path",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for traffic ('peer2peer'), endpoint('campus') set bandwidth('max', '30', 'mbps')",
            "text": "P2P application is separately capped at 30 Mbps for the entire campus"
        },
        "sentence": {
            "nile": "define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",
            "text": "Students data limit is 100 GB per week"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for group('guests') set bandwidth('max', '5', 'mbps')",
            "text": "Guests' network is rate-limited to 5 Mb/s per user"
        },
        "sentence": {
            "nile": "define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",
            "text": "Students data limit is 100 GB per week"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",
            "text": "The individual will have a 4 Mbps bandwidth rate limit"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('host') set quota('download', '18', 'gb'), bandwidth('max', '2', 'mbps')",
            "text": "When a total of 18 gigabytes of data is reached, the individual's bandwidth rate limit is set to 2 Mbps"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: from endpoint('guests') to endpoint('servers') for group('host') block traffic('any')",
            "text": "RHIT-OPEN will work in labs, classrooms and residence halls but does not allow the user to access the internal Rose-Hulman network"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('host') set quota('download', '18', 'gb'), bandwidth('max', '2', 'mbps')",
            "text": "When a total of 18 gigabytes of data is reached, the individual's bandwidth rate limit is set to 2 Mbps"
        },
        "type": "path",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for traffic ('peer2peer'), endpoint('campus') set bandwidth('max', '30', 'mbps')",
            "text": "P2P application is separately capped at 30 Mbps for the entire campus"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('host') set quota('download', '18', 'gb'), bandwidth('max', '2', 'mbps')",
            "text": "When a total of 18 gigabytes of data is reached, the individual's bandwidth rate limit is set to 2 Mbps"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for group('guests') set bandwidth('max', '5', 'mbps')",
            "text": "Guests' network is rate-limited to 5 Mb/s per user"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('host') set quota('download', '18', 'gb'), bandwidth('max', '2', 'mbps')",
            "text": "When a total of 18 gigabytes of data is reached, the individual's bandwidth rate limit is set to 2 Mbps"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: from endpoint('guests') to endpoint('servers') for group('host') block traffic('any')",
            "text": "RHIT-OPEN will work in labs, classrooms and residence halls but does not allow the user to access the internal Rose-Hulman network"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",
            "text": "The individual will have a 4 Mbps bandwidth rate limit"
        },
        "type": "path",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for traffic ('peer2peer'), endpoint('campus') set bandwidth('max', '30', 'mbps')",
            "text": "P2P application is separately capped at 30 Mbps for the entire campus"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",
            "text": "The individual will have a 4 Mbps bandwidth rate limit"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for group('guests') set bandwidth('max', '5', 'mbps')",
            "text": "Guests' network is rate-limited to 5 Mb/s per user"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",
            "text": "The individual will have a 4 Mbps bandwidth rate limit"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for traffic ('peer2peer'), endpoint('campus') set bandwidth('max', '30', 'mbps')",
            "text": "P2P application is separately capped at 30 Mbps for the entire campus"
        },
        "sentence": {
            "nile": "define intent uniIntent: from endpoint('guests') to endpoint('servers') for group('host') block traffic('any')",
            "text": "RHIT-OPEN will work in labs, classrooms and residence halls but does not allow the user to access the internal Rose-Hulman network"
        },
        "type": "path",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for group('guests') set bandwidth('max', '5', 'mbps')",
            "text": "Guests' network is rate-limited to 5 Mb/s per user"
        },
        "sentence": {
            "nile": "define intent uniIntent: from endpoint('guests') to endpoint('servers') for group('host') block traffic('any')",
            "text": "RHIT-OPEN will work in labs, classrooms and residence halls but does not allow the user to access the internal Rose-Hulman network"
        },
        "type": "path",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for group('guests') set bandwidth('max', '5', 'mbps')",
            "text": "Guests' network is rate-limited to 5 Mb/s per user"
        },
        "sentence": {
            "nile": "define intent uniIntent: for traffic ('peer2peer'), endpoint('campus') set bandwidth('max', '30', 'mbps')",
            "text": "P2P application is separately capped at 30 Mbps for the entire campus"
        },
        "type": "qos",
        "university": "Rose-Hulman Institute of Technology"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for group('students') set quota('download', '5000', 'mb/h'), quota('upload', '2000', 'mb/h')",
            "text": "Quotas for students are 5000 Megabyte per hr download and 2000 Megabyte per hour upload"
        },
        "sentence": {
            "nile": "define intent uniIntent: for group('students') set quota('download', '10', 'gb/d') start hour('10:00') end hour('23:59')",
            "text": "Students 10 GB a day download quotas are on 10 AM to Midnight"
        },
        "type": "qos",
        "university": "Columbia University"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('host') set bandwidth('max', '3', 'mbps')",
            "text": "Internet is limited to 3 Mbps per host"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('network') add middlebox('traffic monitor')",
            "text": "The system passively monitors the network throughput when traffic is light"
        },
        "type": "path",
        "university": "Rutgers University"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('guests') block service('file transfer')",
            "text": "Guests cannot run any file sharing/downloading program"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms'), endpoint('wireless') set quota('any', '6', 'gb/d') start hour('00:00') end hour('23:59')",
            "text": "There is a 6 GB per 24-hour period upload or download data transfer limit, starting at midnight of each day, on all your combined traffic on ResNet and UIC wireless"
        },
        "type": "path",
        "university": "University of Illinois - Chicago"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), protocol('telnet'), traffic('peer2peer'), protocol('http'), service('irc'), protocol('dns'), service('email')",
            "text": "You may not run FTP, telnet, peer-to-peer, HTTP, IRC, DNS and mail server on your ResNet or UIC wireless"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('dorms'), endpoint('wireless') set quota('any', '6', 'gb/d') start hour('00:00') end hour('23:59')",
            "text": "There is a 6 GB per 24-hour period upload or download data transfer limit, starting at midnight of each day, on all your combined traffic on ResNet and UIC wireless"
        },
        "type": "path",
        "university": "University of Illinois - Chicago"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), protocol('telnet'), traffic('peer2peer'), protocol('http'), service('irc'), protocol('dns'), service('email')",
            "text": "You may not run FTP, telnet, peer-to-peer, HTTP, IRC, DNS and mail server on your ResNet or UIC wireless"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('guests') block service('file transfer')",
            "text": "Guests cannot run any file sharing/downloading program"
        },
        "type": "negation",
        "university": "University of Illinois - Chicago"
    },
    {
        "amibiguity": 1,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('network') add middlebox('overuse notification') set quota('any', '10', 'gb/wk')",
            "text": "The system will trigger an overuse notification if the average for either inbound or outbound usage exceeds 10 GB per week"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('network') set quota('any', '10', 'gb/d')",
            "text": "No individual service or system running on the wired/wireless network should use more than 10 gigabytes of bandwidth per day, regardless of whether it is in inbound or outbound over the commodity network link"
        },
        "type": "qos",
        "university": "Carnegie Mellon University"
    },
    {
        "amibiguity": 0,
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('network') block traffic('H323 video conferencing')",
            "text": "The network firewall does prevent some applications from working in their normal manner, for example, video and audio conferencing products that use the H.323"
        },
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('network') add middlebox('firewall')",
            "text": "The UVA More Secure Network uses a firewall, a network security device designed to help protect your computer from hackers and other malicious people on the Internet."
        },
        "type": "path",
        "university": "Univeristy of Virginia"
    },
    {
        "amibiguity": 0,
        "sentence": {
            "nile": "define intent uniIntent: for endpoint('network') block service('NETBIOS')",
            "text": "CIS restricts traffic that is known to cause damage to the network or hosts on it, such as NETBIOS"
        },
        "hypothesis": {
            "nile": "define intent uniIntent: for endpoint('network') add middlebox('traffic monitor') ",
            "text": "All network traffic passing in or out of Brown's network is monitored by an intrusion detection system for signs of compromises"
        },
        "type": "path",
        "university": "Brown University"
    }
]
